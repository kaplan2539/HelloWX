CMAKE_MINIMUM_REQUIRED(VERSION 2.6.2)
 
PROJECT("HelloWX")

SET( PROJECT_VERSION_MINOR "0" )
SET( PROJECT_VERSION_MAJOR "0" )
SET( PROJECT_VERSION_PATCH "0" )
SET( PROJECT_VERSION "${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}" )

MESSAGE( "CMAKE_SOURCE_DIR=${CMAKE_SOURCE_DIR}" )
MESSAGE( "CMAKE_ROOT=${CMAKE_ROOT}" )
MESSAGE( "CMAKE_SYSTEM=${CMAKE_SYSTEM}" )
 
FIND_PACKAGE(wxWidgets COMPONENTS core base REQUIRED)
 
INCLUDE( "${wxWidgets_USE_FILE}" )
 
SET(SRCS main.cpp)
SET( MAIN_EXECUTABLE hello )
 
ADD_EXECUTABLE("${MAIN_EXECUTABLE}" ${SRCS})
TARGET_LINK_LIBRARIES(${MAIN_EXECUTABLE} ${wxWidgets_LIBRARIES})
INSTALL(TARGETS ${MAIN_EXECUTABLE} DESTINATION bin)

SET (SVG_ICON_FILE "${CMAKE_SOURCE_DIR}/icon.svg")

IF(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")

  SET( CPACK_GENERATOR              "Bundle" )
  SET( CPACK_BUNDLE_PLIST           "${CMAKE_CURRENT_BINARY_DIR}/Info.plist" )
  SET( CPACK_BUNDLE_NAME            "${PROJECT_NAME}" )
  SET( CPACK_BUNDLE_ICON            "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.icns" )
  SET( CPACK_BUNDLE_STARTUP_COMMAND "${CMAKE_CURRENT_BINARY_DIR}/mac_run.sh" )
	
  SET( MACOSX_BUNDLE_EXECUTABLE_NAME      "${CMAPE_BUNDLE_NAME}" )  #CFBundleExecutable         
  SET( MACOSX_BUNDLE_INFO_STRING          "" )  #CFBundleGetInfoString      
  SET( MACOSX_BUNDLE_ICON_FILE            "${CPACK_BUNDLE_NAME}" ) #CFBundleIconFile
  SET( MACOSX_BUNDLE_GUI_IDENTIFIER       "" )  #CFBundleIdentifier         
  SET( MACOSX_BUNDLE_LONG_VERSION_STRING  "" ) 	#CFBundleLongVersionString  
  SET( MACOSX_BUNDLE_BUNDLE_NAME          "${CPACK_BUNDLE_NAME}" )  #CFBundleName               
  SET( MACOSX_BUNDLE_SHORT_VERSION_STRING "${PROJECT_VERSION}" )	#CFBundleShortVersionString 
  SET( MACOSX_BUNDLE_BUNDLE_VERSION       "${PROJECT_VERSION}" )  #CFBundleVersion            
  SET( MACOSX_BUNDLE_COPYRIGHT            "" )  #NSHumanReadableCopyright   

  CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/mac/mac_run.sh.in" 
                  "${CMAKE_CURRENT_BINARY_DIR}/mac_run.sh" @ONLY )

  CONFIGURE_FILE( "${CMAKE_ROOT}/Modules/MacOSXBundleInfo.plist.in" 
                  "${CMAKE_CURRENT_BINARY_DIR}/Info.plist" )

  ADD_CUSTOM_COMMAND( TARGET ${MAIN_EXECUTABLE} 
                      COMMAND ${CMAKE_SOURCE_DIR}/mac/mac_create_icns.sh "${ICON_FILE}" "${CPACK_BUNDLE_ICON}"
                      DEPENDS "${ICON_FILE}"
                    )

ELSEIF(${CMAKE_SYSTEM_NAME} MATCHES    "Linux")
  INSTALL( FILES "${SVG_ICON_FILE}" DESTINATION share/icons/hicolor/scalable/apps RENAME ${PROJECT_NAME}.svg )

  FIND_PROGRAM(RSVG_CONVERT NAMES rsvg-convert)
  MARK_AS_ADVANCED(RSVG_CONVERT)
  MESSAGE( "RSVG_CONVERT=${RSVG_CONVERT}" )

  FOREACH( SIZE "16" "32" "48" "64" "128" "256" )
    ADD_CUSTOM_COMMAND( OUTPUT icon_${SIZE}x${SIZE}.png
                        COMMAND ${RSVG_CONVERT} -w ${SIZE} -h ${SIZE} ${SVG_ICON_FILE} -o icon_${SIZE}x${SIZE}.png
                        DEPENDS ${SVG_ICON_FILE}
                      )
    ADD_CUSTOM_TARGET(icon_${SIZE}x${SIZE} ALL DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/icon_${SIZE}x${SIZE}.png)
    INSTALL( FILES "${CMAKE_CURRENT_BINARY_DIR}/icon_${SIZE}x${SIZE}.png"
             DESTINATION share/icons/hicolor/${SIZE}x${SIZE}/apps RENAME ${PROJECT_NAME}.png )
  ENDFOREACH()

  SET( DESKTOP_FILE_VERSION    "${PROJECT_VERSION}" )
  SET( DESKTOP_FILE_NAME       "${PROJECT_NAME}" )
  SET( DESKTOP_FILE_COMMENT    "" )
  SET( DESKTOP_FILE_EXEC       "${MAIN_EXECUTABLE}" )
  SET( DESKTOP_FILE_ICON       "${PROJECT_NAME}" )
  SET( DESKTOP_FILE_TERMINAL   "false" )
  SET( DESKTOP_FILE_TYPE       "Application" )
  SET( DESKTOP_FILE_CATEGORIES "Utiltiy;Application;" )

  SET( DESKTOP_FILE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}.desktop" )
  CONFIGURE_FILE( "${CMAKE_SOURCE_DIR}/ubuntu/desktopfile.in" "${DESKTOP_FILE}" )
  INSTALL( FILES "${DESKTOP_FILE}" DESTINATION share/applications )
 
  SET( CPACK_GENERATOR                 "DEB")
  SET( CPACK_DEBIAN_PACKAGE_MAINTAINER "Your Name Here" )
  SET( CPACK_DEBIAN_PACKAGE_SHLIBDEPS  ON )
ENDIF()

SET( CPACK_PACKAGE_FILE_NAME "${PROJECT_NAME}" )

INCLUDE( CPack )
